### YamlMime:XRefMap
sorted: true
references:
- uid: Platform.Protocols.Lino
  name: Platform.Protocols.Lino
  href: api/Platform.Protocols.Lino.html
  commentId: N:Platform.Protocols.Lino
  fullName: Platform.Protocols.Lino
  nameWithType: Platform.Protocols.Lino
- uid: Platform.Protocols.Lino._
  name: _
  href: api/Platform.Protocols.Lino._.html
  commentId: T:Platform.Protocols.Lino._
  fullName: Platform.Protocols.Lino._
  nameWithType: _
- uid: Platform.Protocols.Lino._.#ctor(Platform.Protocols.Lino.Link)
  name: _(Link)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino____ctor_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino._.#ctor(Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino._._(Platform.Protocols.Lino.Link)
  nameWithType: _._(Link)
- uid: Platform.Protocols.Lino._.#ctor*
  name: _
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino____ctor_
  commentId: Overload:Platform.Protocols.Lino._.#ctor
  isSpec: "True"
  fullName: Platform.Protocols.Lino._._
  nameWithType: _._
- uid: Platform.Protocols.Lino._.Link
  name: Link
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___Link
  commentId: F:Platform.Protocols.Lino._.Link
  fullName: Platform.Protocols.Lino._.Link
  nameWithType: _.Link
- uid: Platform.Protocols.Lino._.op_Implicit(Platform.Protocols.Lino._)~Platform.Protocols.Lino.Link
  name: Implicit(_ to Link)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_Platform_Protocols_Lino____Platform_Protocols_Lino_Link
  commentId: M:Platform.Protocols.Lino._.op_Implicit(Platform.Protocols.Lino._)~Platform.Protocols.Lino.Link
  name.vb: Widening(_ to Link)
  fullName: Platform.Protocols.Lino._.Implicit(Platform.Protocols.Lino._ to Platform.Protocols.Lino.Link)
  fullName.vb: Platform.Protocols.Lino._.Widening(Platform.Protocols.Lino._ to Platform.Protocols.Lino.Link)
  nameWithType: _.Implicit(_ to Link)
  nameWithType.vb: _.Widening(_ to Link)
- uid: Platform.Protocols.Lino._.op_Implicit(Platform.Protocols.Lino.Link)~Platform.Protocols.Lino._
  name: Implicit(Link to _)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_Platform_Protocols_Lino_Link__Platform_Protocols_Lino__
  commentId: M:Platform.Protocols.Lino._.op_Implicit(Platform.Protocols.Lino.Link)~Platform.Protocols.Lino._
  name.vb: Widening(Link to _)
  fullName: Platform.Protocols.Lino._.Implicit(Platform.Protocols.Lino.Link to Platform.Protocols.Lino._)
  fullName.vb: Platform.Protocols.Lino._.Widening(Platform.Protocols.Lino.Link to Platform.Protocols.Lino._)
  nameWithType: _.Implicit(Link to _)
  nameWithType.vb: _.Widening(Link to _)
- uid: Platform.Protocols.Lino._.op_Implicit(System.String)~Platform.Protocols.Lino._
  name: Implicit(String to _)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_System_String__Platform_Protocols_Lino__
  commentId: M:Platform.Protocols.Lino._.op_Implicit(System.String)~Platform.Protocols.Lino._
  name.vb: Widening(String to _)
  fullName: Platform.Protocols.Lino._.Implicit(System.String to Platform.Protocols.Lino._)
  fullName.vb: Platform.Protocols.Lino._.Widening(System.String to Platform.Protocols.Lino._)
  nameWithType: _.Implicit(String to _)
  nameWithType.vb: _.Widening(String to _)
- uid: Platform.Protocols.Lino._.op_Implicit(System.ValueTuple{System.String,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino._
  name: Implicit((String, Link, Link, Link) to _)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_System_ValueTuple_System_String_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link___Platform_Protocols_Lino__
  commentId: M:Platform.Protocols.Lino._.op_Implicit(System.ValueTuple{System.String,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino._
  name.vb: Widening((String, Link, Link, Link) to _)
  fullName: Platform.Protocols.Lino._.Implicit(System.ValueTuple<System.String, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link> to Platform.Protocols.Lino._)
  fullName.vb: Platform.Protocols.Lino._.Widening(System.ValueTuple(Of System.String, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link) to Platform.Protocols.Lino._)
  nameWithType: _.Implicit((String, Link, Link, Link) to _)
  nameWithType.vb: _.Widening((String, Link, Link, Link) to _)
- uid: Platform.Protocols.Lino._.op_Implicit(System.ValueTuple{System.String,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino._
  name: Implicit((String, Link, Link) to _)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_System_ValueTuple_System_String_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link___Platform_Protocols_Lino__
  commentId: M:Platform.Protocols.Lino._.op_Implicit(System.ValueTuple{System.String,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino._
  name.vb: Widening((String, Link, Link) to _)
  fullName: Platform.Protocols.Lino._.Implicit(System.ValueTuple<System.String, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link> to Platform.Protocols.Lino._)
  fullName.vb: Platform.Protocols.Lino._.Widening(System.ValueTuple(Of System.String, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link) to Platform.Protocols.Lino._)
  nameWithType: _.Implicit((String, Link, Link) to _)
  nameWithType.vb: _.Widening((String, Link, Link) to _)
- uid: Platform.Protocols.Lino._.op_Implicit(System.ValueTuple{System.String,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino._
  name: Implicit((String, Link) to _)
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_System_ValueTuple_System_String_Platform_Protocols_Lino_Link___Platform_Protocols_Lino__
  commentId: M:Platform.Protocols.Lino._.op_Implicit(System.ValueTuple{System.String,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino._
  name.vb: Widening((String, Link) to _)
  fullName: Platform.Protocols.Lino._.Implicit(System.ValueTuple<System.String, Platform.Protocols.Lino.Link> to Platform.Protocols.Lino._)
  fullName.vb: Platform.Protocols.Lino._.Widening(System.ValueTuple(Of System.String, Platform.Protocols.Lino.Link) to Platform.Protocols.Lino._)
  nameWithType: _.Implicit((String, Link) to _)
  nameWithType.vb: _.Widening((String, Link) to _)
- uid: Platform.Protocols.Lino._.op_Implicit*
  name: Implicit
  href: api/Platform.Protocols.Lino._.html#Platform_Protocols_Lino___op_Implicit_
  commentId: Overload:Platform.Protocols.Lino._.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Platform.Protocols.Lino._.Implicit
  fullName.vb: Platform.Protocols.Lino._.Widening
  nameWithType: _.Implicit
  nameWithType.vb: _.Widening
- uid: Platform.Protocols.Lino.ILinksGroupListExtensions
  name: ILinksGroupListExtensions
  href: api/Platform.Protocols.Lino.ILinksGroupListExtensions.html
  commentId: T:Platform.Protocols.Lino.ILinksGroupListExtensions
  fullName: Platform.Protocols.Lino.ILinksGroupListExtensions
  nameWithType: ILinksGroupListExtensions
- uid: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList(System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup})
  name: ToLinksList(IList<LinksGroup>)
  href: api/Platform.Protocols.Lino.ILinksGroupListExtensions.html#Platform_Protocols_Lino_ILinksGroupListExtensions_ToLinksList_System_Collections_Generic_IList_Platform_Protocols_Lino_LinksGroup__
  commentId: M:Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList(System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup})
  name.vb: ToLinksList(IList(Of LinksGroup))
  fullName: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList(System.Collections.Generic.IList<Platform.Protocols.Lino.LinksGroup>)
  fullName.vb: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList(System.Collections.Generic.IList(Of Platform.Protocols.Lino.LinksGroup))
  nameWithType: ILinksGroupListExtensions.ToLinksList(IList<LinksGroup>)
  nameWithType.vb: ILinksGroupListExtensions.ToLinksList(IList(Of LinksGroup))
- uid: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList*
  name: ToLinksList
  href: api/Platform.Protocols.Lino.ILinksGroupListExtensions.html#Platform_Protocols_Lino_ILinksGroupListExtensions_ToLinksList_
  commentId: Overload:Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList
  isSpec: "True"
  fullName: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList
  nameWithType: ILinksGroupListExtensions.ToLinksList
- uid: Platform.Protocols.Lino.IListExtensions
  name: IListExtensions
  href: api/Platform.Protocols.Lino.IListExtensions.html
  commentId: T:Platform.Protocols.Lino.IListExtensions
  fullName: Platform.Protocols.Lino.IListExtensions
  nameWithType: IListExtensions
- uid: Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList{Platform.Protocols.Lino.Link})
  name: Format(IList<Link>)
  href: api/Platform.Protocols.Lino.IListExtensions.html#Platform_Protocols_Lino_IListExtensions_Format_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__
  commentId: M:Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList{Platform.Protocols.Lino.Link})
  name.vb: Format(IList(Of Link))
  fullName: Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList<Platform.Protocols.Lino.Link>)
  fullName.vb: Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link))
  nameWithType: IListExtensions.Format(IList<Link>)
  nameWithType.vb: IListExtensions.Format(IList(Of Link))
- uid: Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList{Platform.Protocols.Lino.Link},System.Boolean)
  name: Format(IList<Link>, Boolean)
  href: api/Platform.Protocols.Lino.IListExtensions.html#Platform_Protocols_Lino_IListExtensions_Format_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__System_Boolean_
  commentId: M:Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList{Platform.Protocols.Lino.Link},System.Boolean)
  name.vb: Format(IList(Of Link), Boolean)
  fullName: Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList<Platform.Protocols.Lino.Link>, System.Boolean)
  fullName.vb: Platform.Protocols.Lino.IListExtensions.Format(System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link), System.Boolean)
  nameWithType: IListExtensions.Format(IList<Link>, Boolean)
  nameWithType.vb: IListExtensions.Format(IList(Of Link), Boolean)
- uid: Platform.Protocols.Lino.IListExtensions.Format*
  name: Format
  href: api/Platform.Protocols.Lino.IListExtensions.html#Platform_Protocols_Lino_IListExtensions_Format_
  commentId: Overload:Platform.Protocols.Lino.IListExtensions.Format
  isSpec: "True"
  fullName: Platform.Protocols.Lino.IListExtensions.Format
  nameWithType: IListExtensions.Format
- uid: Platform.Protocols.Lino.Link
  name: Link
  href: api/Platform.Protocols.Lino.Link.html
  commentId: T:Platform.Protocols.Lino.Link
  fullName: Platform.Protocols.Lino.Link
  nameWithType: Link
- uid: Platform.Protocols.Lino.Link.#ctor(Platform.Protocols.Lino.Link[])
  name: Link(Link[])
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link__ctor_Platform_Protocols_Lino_Link___
  commentId: M:Platform.Protocols.Lino.Link.#ctor(Platform.Protocols.Lino.Link[])
  name.vb: Link(Link())
  fullName: Platform.Protocols.Lino.Link.Link(Platform.Protocols.Lino.Link[])
  fullName.vb: Platform.Protocols.Lino.Link.Link(Platform.Protocols.Lino.Link())
  nameWithType: Link.Link(Link[])
  nameWithType.vb: Link.Link(Link())
- uid: Platform.Protocols.Lino.Link.#ctor(System.Collections.Generic.IList{Platform.Protocols.Lino.Link})
  name: Link(IList<Link>)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link__ctor_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__
  commentId: M:Platform.Protocols.Lino.Link.#ctor(System.Collections.Generic.IList{Platform.Protocols.Lino.Link})
  name.vb: Link(IList(Of Link))
  fullName: Platform.Protocols.Lino.Link.Link(System.Collections.Generic.IList<Platform.Protocols.Lino.Link>)
  fullName.vb: Platform.Protocols.Lino.Link.Link(System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link))
  nameWithType: Link.Link(IList<Link>)
  nameWithType.vb: Link.Link(IList(Of Link))
- uid: Platform.Protocols.Lino.Link.#ctor(System.String)
  name: Link(String)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link__ctor_System_String_
  commentId: M:Platform.Protocols.Lino.Link.#ctor(System.String)
  fullName: Platform.Protocols.Lino.Link.Link(System.String)
  nameWithType: Link.Link(String)
- uid: Platform.Protocols.Lino.Link.#ctor(System.String,System.Collections.Generic.IList{Platform.Protocols.Lino.Link})
  name: Link(String, IList<Link>)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link__ctor_System_String_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__
  commentId: M:Platform.Protocols.Lino.Link.#ctor(System.String,System.Collections.Generic.IList{Platform.Protocols.Lino.Link})
  name.vb: Link(String, IList(Of Link))
  fullName: Platform.Protocols.Lino.Link.Link(System.String, System.Collections.Generic.IList<Platform.Protocols.Lino.Link>)
  fullName.vb: Platform.Protocols.Lino.Link.Link(System.String, System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link))
  nameWithType: Link.Link(String, IList<Link>)
  nameWithType.vb: Link.Link(String, IList(Of Link))
- uid: Platform.Protocols.Lino.Link.#ctor*
  name: Link
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link__ctor_
  commentId: Overload:Platform.Protocols.Lino.Link.#ctor
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.Link
  nameWithType: Link.Link
- uid: Platform.Protocols.Lino.Link.Combine(Platform.Protocols.Lino.Link)
  name: Combine(Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Combine_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.Link.Combine(Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino.Link.Combine(Platform.Protocols.Lino.Link)
  nameWithType: Link.Combine(Link)
- uid: Platform.Protocols.Lino.Link.Combine*
  name: Combine
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Combine_
  commentId: Overload:Platform.Protocols.Lino.Link.Combine
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.Combine
  nameWithType: Link.Combine
- uid: Platform.Protocols.Lino.Link.Equals(Platform.Protocols.Lino.Link)
  name: Equals(Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Equals_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.Link.Equals(Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino.Link.Equals(Platform.Protocols.Lino.Link)
  nameWithType: Link.Equals(Link)
- uid: Platform.Protocols.Lino.Link.Equals(System.Object)
  name: Equals(Object)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Equals_System_Object_
  commentId: M:Platform.Protocols.Lino.Link.Equals(System.Object)
  fullName: Platform.Protocols.Lino.Link.Equals(System.Object)
  nameWithType: Link.Equals(Object)
- uid: Platform.Protocols.Lino.Link.Equals*
  name: Equals
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Equals_
  commentId: Overload:Platform.Protocols.Lino.Link.Equals
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.Equals
  nameWithType: Link.Equals
- uid: Platform.Protocols.Lino.Link.GetHashCode
  name: GetHashCode()
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_GetHashCode
  commentId: M:Platform.Protocols.Lino.Link.GetHashCode
  fullName: Platform.Protocols.Lino.Link.GetHashCode()
  nameWithType: Link.GetHashCode()
- uid: Platform.Protocols.Lino.Link.GetHashCode*
  name: GetHashCode
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_GetHashCode_
  commentId: Overload:Platform.Protocols.Lino.Link.GetHashCode
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.GetHashCode
  nameWithType: Link.GetHashCode
- uid: Platform.Protocols.Lino.Link.GetValuesString
  name: GetValuesString()
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_GetValuesString
  commentId: M:Platform.Protocols.Lino.Link.GetValuesString
  fullName: Platform.Protocols.Lino.Link.GetValuesString()
  nameWithType: Link.GetValuesString()
- uid: Platform.Protocols.Lino.Link.GetValuesString*
  name: GetValuesString
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_GetValuesString_
  commentId: Overload:Platform.Protocols.Lino.Link.GetValuesString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.GetValuesString
  nameWithType: Link.GetValuesString
- uid: Platform.Protocols.Lino.Link.GetValueString(Platform.Protocols.Lino.Link)
  name: GetValueString(Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_GetValueString_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.Link.GetValueString(Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino.Link.GetValueString(Platform.Protocols.Lino.Link)
  nameWithType: Link.GetValueString(Link)
- uid: Platform.Protocols.Lino.Link.GetValueString*
  name: GetValueString
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_GetValueString_
  commentId: Overload:Platform.Protocols.Lino.Link.GetValueString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.GetValueString
  nameWithType: Link.GetValueString
- uid: Platform.Protocols.Lino.Link.Id
  name: Id
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Id
  commentId: F:Platform.Protocols.Lino.Link.Id
  fullName: Platform.Protocols.Lino.Link.Id
  nameWithType: Link.Id
- uid: Platform.Protocols.Lino.Link.op_Equality(Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link)
  name: Equality(Link, Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Equality_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.Link.op_Equality(Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino.Link.Equality(Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link)
  nameWithType: Link.Equality(Link, Link)
- uid: Platform.Protocols.Lino.Link.op_Equality*
  name: Equality
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Equality_
  commentId: Overload:Platform.Protocols.Lino.Link.op_Equality
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.Equality
  nameWithType: Link.Equality
- uid: Platform.Protocols.Lino.Link.op_Implicit(System.String)~Platform.Protocols.Lino.Link
  name: Implicit(String to Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Implicit_System_String__Platform_Protocols_Lino_Link
  commentId: M:Platform.Protocols.Lino.Link.op_Implicit(System.String)~Platform.Protocols.Lino.Link
  name.vb: Widening(String to Link)
  fullName: Platform.Protocols.Lino.Link.Implicit(System.String to Platform.Protocols.Lino.Link)
  fullName.vb: Platform.Protocols.Lino.Link.Widening(System.String to Platform.Protocols.Lino.Link)
  nameWithType: Link.Implicit(String to Link)
  nameWithType.vb: Link.Widening(String to Link)
- uid: Platform.Protocols.Lino.Link.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino.Link
  name: Implicit((Link, Link, Link) to Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Implicit_System_ValueTuple_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link___Platform_Protocols_Lino_Link
  commentId: M:Platform.Protocols.Lino.Link.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino.Link
  name.vb: Widening((Link, Link, Link) to Link)
  fullName: Platform.Protocols.Lino.Link.Implicit(System.ValueTuple<Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link> to Platform.Protocols.Lino.Link)
  fullName.vb: Platform.Protocols.Lino.Link.Widening(System.ValueTuple(Of Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link) to Platform.Protocols.Lino.Link)
  nameWithType: Link.Implicit((Link, Link, Link) to Link)
  nameWithType.vb: Link.Widening((Link, Link, Link) to Link)
- uid: Platform.Protocols.Lino.Link.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino.Link
  name: Implicit((Link, Link) to Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Implicit_System_ValueTuple_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link___Platform_Protocols_Lino_Link
  commentId: M:Platform.Protocols.Lino.Link.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link})~Platform.Protocols.Lino.Link
  name.vb: Widening((Link, Link) to Link)
  fullName: Platform.Protocols.Lino.Link.Implicit(System.ValueTuple<Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link> to Platform.Protocols.Lino.Link)
  fullName.vb: Platform.Protocols.Lino.Link.Widening(System.ValueTuple(Of Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link) to Platform.Protocols.Lino.Link)
  nameWithType: Link.Implicit((Link, Link) to Link)
  nameWithType.vb: Link.Widening((Link, Link) to Link)
- uid: Platform.Protocols.Lino.Link.op_Implicit(System.ValueTuple{System.String,System.Collections.Generic.IList{Platform.Protocols.Lino.Link}})~Platform.Protocols.Lino.Link
  name: Implicit((String, IList<Link>) to Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Implicit_System_ValueTuple_System_String_System_Collections_Generic_IList_Platform_Protocols_Lino_Link____Platform_Protocols_Lino_Link
  commentId: M:Platform.Protocols.Lino.Link.op_Implicit(System.ValueTuple{System.String,System.Collections.Generic.IList{Platform.Protocols.Lino.Link}})~Platform.Protocols.Lino.Link
  name.vb: Widening((String, IList(Of Link)) to Link)
  fullName: Platform.Protocols.Lino.Link.Implicit(System.ValueTuple<System.String, System.Collections.Generic.IList<Platform.Protocols.Lino.Link>> to Platform.Protocols.Lino.Link)
  fullName.vb: Platform.Protocols.Lino.Link.Widening(System.ValueTuple(Of System.String, System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link)) to Platform.Protocols.Lino.Link)
  nameWithType: Link.Implicit((String, IList<Link>) to Link)
  nameWithType.vb: Link.Widening((String, IList(Of Link)) to Link)
- uid: Platform.Protocols.Lino.Link.op_Implicit*
  name: Implicit
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Implicit_
  commentId: Overload:Platform.Protocols.Lino.Link.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Platform.Protocols.Lino.Link.Implicit
  fullName.vb: Platform.Protocols.Lino.Link.Widening
  nameWithType: Link.Implicit
  nameWithType.vb: Link.Widening
- uid: Platform.Protocols.Lino.Link.op_Inequality(Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link)
  name: Inequality(Link, Link)
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Inequality_Platform_Protocols_Lino_Link_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.Link.op_Inequality(Platform.Protocols.Lino.Link,Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino.Link.Inequality(Platform.Protocols.Lino.Link, Platform.Protocols.Lino.Link)
  nameWithType: Link.Inequality(Link, Link)
- uid: Platform.Protocols.Lino.Link.op_Inequality*
  name: Inequality
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_op_Inequality_
  commentId: Overload:Platform.Protocols.Lino.Link.op_Inequality
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.Inequality
  nameWithType: Link.Inequality
- uid: Platform.Protocols.Lino.Link.Simplify
  name: Simplify()
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Simplify
  commentId: M:Platform.Protocols.Lino.Link.Simplify
  fullName: Platform.Protocols.Lino.Link.Simplify()
  nameWithType: Link.Simplify()
- uid: Platform.Protocols.Lino.Link.Simplify*
  name: Simplify
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Simplify_
  commentId: Overload:Platform.Protocols.Lino.Link.Simplify
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.Simplify
  nameWithType: Link.Simplify
- uid: Platform.Protocols.Lino.Link.ToLinkOrIdString
  name: ToLinkOrIdString()
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_ToLinkOrIdString
  commentId: M:Platform.Protocols.Lino.Link.ToLinkOrIdString
  fullName: Platform.Protocols.Lino.Link.ToLinkOrIdString()
  nameWithType: Link.ToLinkOrIdString()
- uid: Platform.Protocols.Lino.Link.ToLinkOrIdString*
  name: ToLinkOrIdString
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_ToLinkOrIdString_
  commentId: Overload:Platform.Protocols.Lino.Link.ToLinkOrIdString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.ToLinkOrIdString
  nameWithType: Link.ToLinkOrIdString
- uid: Platform.Protocols.Lino.Link.ToString
  name: ToString()
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_ToString
  commentId: M:Platform.Protocols.Lino.Link.ToString
  fullName: Platform.Protocols.Lino.Link.ToString()
  nameWithType: Link.ToString()
- uid: Platform.Protocols.Lino.Link.ToString*
  name: ToString
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_ToString_
  commentId: Overload:Platform.Protocols.Lino.Link.ToString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link.ToString
  nameWithType: Link.ToString
- uid: Platform.Protocols.Lino.Link.Values
  name: Values
  href: api/Platform.Protocols.Lino.Link.html#Platform_Protocols_Lino_Link_Values
  commentId: F:Platform.Protocols.Lino.Link.Values
  fullName: Platform.Protocols.Lino.Link.Values
  nameWithType: Link.Values
- uid: Platform.Protocols.Lino.LinksGroup
  name: LinksGroup
  href: api/Platform.Protocols.Lino.LinksGroup.html
  commentId: T:Platform.Protocols.Lino.LinksGroup
  fullName: Platform.Protocols.Lino.LinksGroup
  nameWithType: LinksGroup
- uid: Platform.Protocols.Lino.LinksGroup.#ctor(Platform.Protocols.Lino.Link)
  name: LinksGroup(Link)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup__ctor_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.LinksGroup.#ctor(Platform.Protocols.Lino.Link)
  fullName: Platform.Protocols.Lino.LinksGroup.LinksGroup(Platform.Protocols.Lino.Link)
  nameWithType: LinksGroup.LinksGroup(Link)
- uid: Platform.Protocols.Lino.LinksGroup.#ctor(Platform.Protocols.Lino.Link,System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup})
  name: LinksGroup(Link, IList<LinksGroup>)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup__ctor_Platform_Protocols_Lino_Link_System_Collections_Generic_IList_Platform_Protocols_Lino_LinksGroup__
  commentId: M:Platform.Protocols.Lino.LinksGroup.#ctor(Platform.Protocols.Lino.Link,System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup})
  name.vb: LinksGroup(Link, IList(Of LinksGroup))
  fullName: Platform.Protocols.Lino.LinksGroup.LinksGroup(Platform.Protocols.Lino.Link, System.Collections.Generic.IList<Platform.Protocols.Lino.LinksGroup>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup.LinksGroup(Platform.Protocols.Lino.Link, System.Collections.Generic.IList(Of Platform.Protocols.Lino.LinksGroup))
  nameWithType: LinksGroup.LinksGroup(Link, IList<LinksGroup>)
  nameWithType.vb: LinksGroup.LinksGroup(Link, IList(Of LinksGroup))
- uid: Platform.Protocols.Lino.LinksGroup.#ctor*
  name: LinksGroup
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup__ctor_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.#ctor
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.LinksGroup
  nameWithType: LinksGroup.LinksGroup
- uid: Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link})
  name: AppendToLinksList(List<Link>)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_AppendToLinksList_System_Collections_Generic_List_Platform_Protocols_Lino_Link__
  commentId: M:Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link})
  name.vb: AppendToLinksList(List(Of Link))
  fullName: Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List<Platform.Protocols.Lino.Link>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List(Of Platform.Protocols.Lino.Link))
  nameWithType: LinksGroup.AppendToLinksList(List<Link>)
  nameWithType.vb: LinksGroup.AppendToLinksList(List(Of Link))
- uid: Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link},Platform.Protocols.Lino.Link,Platform.Protocols.Lino.LinksGroup)
  name: AppendToLinksList(List<Link>, Link, LinksGroup)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_AppendToLinksList_System_Collections_Generic_List_Platform_Protocols_Lino_Link__Platform_Protocols_Lino_Link_Platform_Protocols_Lino_LinksGroup_
  commentId: M:Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link},Platform.Protocols.Lino.Link,Platform.Protocols.Lino.LinksGroup)
  name.vb: AppendToLinksList(List(Of Link), Link, LinksGroup)
  fullName: Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List<Platform.Protocols.Lino.Link>, Platform.Protocols.Lino.Link, Platform.Protocols.Lino.LinksGroup)
  fullName.vb: Platform.Protocols.Lino.LinksGroup.AppendToLinksList(System.Collections.Generic.List(Of Platform.Protocols.Lino.Link), Platform.Protocols.Lino.Link, Platform.Protocols.Lino.LinksGroup)
  nameWithType: LinksGroup.AppendToLinksList(List<Link>, Link, LinksGroup)
  nameWithType.vb: LinksGroup.AppendToLinksList(List(Of Link), Link, LinksGroup)
- uid: Platform.Protocols.Lino.LinksGroup.AppendToLinksList*
  name: AppendToLinksList
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_AppendToLinksList_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.AppendToLinksList
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.AppendToLinksList
  nameWithType: LinksGroup.AppendToLinksList
- uid: Platform.Protocols.Lino.LinksGroup.Equals(Platform.Protocols.Lino.LinksGroup)
  name: Equals(LinksGroup)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Equals_Platform_Protocols_Lino_LinksGroup_
  commentId: M:Platform.Protocols.Lino.LinksGroup.Equals(Platform.Protocols.Lino.LinksGroup)
  fullName: Platform.Protocols.Lino.LinksGroup.Equals(Platform.Protocols.Lino.LinksGroup)
  nameWithType: LinksGroup.Equals(LinksGroup)
- uid: Platform.Protocols.Lino.LinksGroup.Equals(System.Object)
  name: Equals(Object)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Equals_System_Object_
  commentId: M:Platform.Protocols.Lino.LinksGroup.Equals(System.Object)
  fullName: Platform.Protocols.Lino.LinksGroup.Equals(System.Object)
  nameWithType: LinksGroup.Equals(Object)
- uid: Platform.Protocols.Lino.LinksGroup.Equals*
  name: Equals
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Equals_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.Equals
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.Equals
  nameWithType: LinksGroup.Equals
- uid: Platform.Protocols.Lino.LinksGroup.GetHashCode
  name: GetHashCode()
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_GetHashCode
  commentId: M:Platform.Protocols.Lino.LinksGroup.GetHashCode
  fullName: Platform.Protocols.Lino.LinksGroup.GetHashCode()
  nameWithType: LinksGroup.GetHashCode()
- uid: Platform.Protocols.Lino.LinksGroup.GetHashCode*
  name: GetHashCode
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_GetHashCode_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.GetHashCode
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.GetHashCode
  nameWithType: LinksGroup.GetHashCode
- uid: Platform.Protocols.Lino.LinksGroup.Groups
  name: Groups
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Groups
  commentId: P:Platform.Protocols.Lino.LinksGroup.Groups
  fullName: Platform.Protocols.Lino.LinksGroup.Groups
  nameWithType: LinksGroup.Groups
- uid: Platform.Protocols.Lino.LinksGroup.Groups*
  name: Groups
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Groups_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.Groups
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.Groups
  nameWithType: LinksGroup.Groups
- uid: Platform.Protocols.Lino.LinksGroup.Link
  name: Link
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Link
  commentId: P:Platform.Protocols.Lino.LinksGroup.Link
  fullName: Platform.Protocols.Lino.LinksGroup.Link
  nameWithType: LinksGroup.Link
- uid: Platform.Protocols.Lino.LinksGroup.Link*
  name: Link
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_Link_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.Link
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.Link
  nameWithType: LinksGroup.Link
- uid: Platform.Protocols.Lino.LinksGroup.op_Equality(Platform.Protocols.Lino.LinksGroup,Platform.Protocols.Lino.LinksGroup)
  name: Equality(LinksGroup, LinksGroup)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_op_Equality_Platform_Protocols_Lino_LinksGroup_Platform_Protocols_Lino_LinksGroup_
  commentId: M:Platform.Protocols.Lino.LinksGroup.op_Equality(Platform.Protocols.Lino.LinksGroup,Platform.Protocols.Lino.LinksGroup)
  fullName: Platform.Protocols.Lino.LinksGroup.Equality(Platform.Protocols.Lino.LinksGroup, Platform.Protocols.Lino.LinksGroup)
  nameWithType: LinksGroup.Equality(LinksGroup, LinksGroup)
- uid: Platform.Protocols.Lino.LinksGroup.op_Equality*
  name: Equality
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_op_Equality_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.op_Equality
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.Equality
  nameWithType: LinksGroup.Equality
- uid: Platform.Protocols.Lino.LinksGroup.op_Implicit(Platform.Protocols.Lino.LinksGroup)~System.Collections.Generic.List{Platform.Protocols.Lino.Link}
  name: Implicit(LinksGroup to List<Link>)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_op_Implicit_Platform_Protocols_Lino_LinksGroup__System_Collections_Generic_List_Platform_Protocols_Lino_Link_
  commentId: M:Platform.Protocols.Lino.LinksGroup.op_Implicit(Platform.Protocols.Lino.LinksGroup)~System.Collections.Generic.List{Platform.Protocols.Lino.Link}
  name.vb: Widening(LinksGroup to List(Of Link))
  fullName: Platform.Protocols.Lino.LinksGroup.Implicit(Platform.Protocols.Lino.LinksGroup to System.Collections.Generic.List<Platform.Protocols.Lino.Link>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup.Widening(Platform.Protocols.Lino.LinksGroup to System.Collections.Generic.List(Of Platform.Protocols.Lino.Link))
  nameWithType: LinksGroup.Implicit(LinksGroup to List<Link>)
  nameWithType.vb: LinksGroup.Widening(LinksGroup to List(Of Link))
- uid: Platform.Protocols.Lino.LinksGroup.op_Implicit*
  name: Implicit
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_op_Implicit_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Platform.Protocols.Lino.LinksGroup.Implicit
  fullName.vb: Platform.Protocols.Lino.LinksGroup.Widening
  nameWithType: LinksGroup.Implicit
  nameWithType.vb: LinksGroup.Widening
- uid: Platform.Protocols.Lino.LinksGroup.op_Inequality(Platform.Protocols.Lino.LinksGroup,Platform.Protocols.Lino.LinksGroup)
  name: Inequality(LinksGroup, LinksGroup)
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_op_Inequality_Platform_Protocols_Lino_LinksGroup_Platform_Protocols_Lino_LinksGroup_
  commentId: M:Platform.Protocols.Lino.LinksGroup.op_Inequality(Platform.Protocols.Lino.LinksGroup,Platform.Protocols.Lino.LinksGroup)
  fullName: Platform.Protocols.Lino.LinksGroup.Inequality(Platform.Protocols.Lino.LinksGroup, Platform.Protocols.Lino.LinksGroup)
  nameWithType: LinksGroup.Inequality(LinksGroup, LinksGroup)
- uid: Platform.Protocols.Lino.LinksGroup.op_Inequality*
  name: Inequality
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_op_Inequality_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.op_Inequality
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.Inequality
  nameWithType: LinksGroup.Inequality
- uid: Platform.Protocols.Lino.LinksGroup.ToLinksList
  name: ToLinksList()
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_ToLinksList
  commentId: M:Platform.Protocols.Lino.LinksGroup.ToLinksList
  fullName: Platform.Protocols.Lino.LinksGroup.ToLinksList()
  nameWithType: LinksGroup.ToLinksList()
- uid: Platform.Protocols.Lino.LinksGroup.ToLinksList*
  name: ToLinksList
  href: api/Platform.Protocols.Lino.LinksGroup.html#Platform_Protocols_Lino_LinksGroup_ToLinksList_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup.ToLinksList
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup.ToLinksList
  nameWithType: LinksGroup.ToLinksList
- uid: Platform.Protocols.Lino.Parser
  name: Parser
  href: api/Platform.Protocols.Lino.Parser.html
  commentId: T:Platform.Protocols.Lino.Parser
  fullName: Platform.Protocols.Lino.Parser
  nameWithType: Parser
- uid: Platform.Protocols.Lino.Parser.Parse(System.String,System.String)
  name: Parse(String, String)
  href: api/Platform.Protocols.Lino.Parser.html#Platform_Protocols_Lino_Parser_Parse_System_String_System_String_
  commentId: M:Platform.Protocols.Lino.Parser.Parse(System.String,System.String)
  fullName: Platform.Protocols.Lino.Parser.Parse(System.String, System.String)
  nameWithType: Parser.Parse(String, String)
- uid: Platform.Protocols.Lino.Parser.Parse*
  name: Parse
  href: api/Platform.Protocols.Lino.Parser.html#Platform_Protocols_Lino_Parser_Parse_
  commentId: Overload:Platform.Protocols.Lino.Parser.Parse
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Parser.Parse
  nameWithType: Parser.Parse
